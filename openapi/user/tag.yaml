get:
  tags:
    - "Tag"
  operationId: "getTimeRegistrationTags"
  description: |
    Gets the tags associated with the specified time registration. This includes both the tags that have already been
    added, and the ones that can be added.
  parameters:
    - in: query
      name: "timeRegistrationId"
      schema:
        type: "integer"
        format: "int64"
      required: true
      description: "The ID of the time registration to get tags for"
  responses:
    "200":
      description: "List of tags for the requested time registration, both existing and available to add"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../schemas/user/TimeRegistrationTag.yaml"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "404":
      description: "Unable to find a time registration with the specified timeRegistrationId"
    "502":
      $ref: "../responses/BadGateway.yaml"
post:
  tags:
    - "Tag"
  operationId: "tagTimeRegistration"
  description: |
    Add an optional tag to a time registration with the specified tag value
  parameters:
    - in: query
      name: "timeRegistrationId"
      schema:
        type: "integer"
        format: "int64"
      required: true
      description: "The ID of the time registration to add a tag to"
  requestBody:
    description: "A JSON object containing tag information"
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/user/TagTimeRegistrationRequest.yaml"
  responses:
    "200":
      description: "Tag was successfully added to the time registration. The response contains the id of the new tag"
      content:
        application/json:
          schema:
            $ref: "../schemas/DefaultCreateResponse.yaml"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "400":
      description: "Tag was not added to the time registration due to an error with the request"
    "404":
      description: "No time registration was found to tag"
    "502":
      $ref: "../responses/BadGateway.yaml"
put:
  tags:
    - "Tag"
  operationId: "updateTagRegistration"
  description: |
    Updates a tag that was added to a time registration. Both mandatory and optional tags can have their value updated.
  requestBody:
    description: "A JSON object containing the updated tag information"
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/user/Tag.yaml"
  responses:
    "200":
      description: "Tag was successfully updated"
      content:
        application/json:
          schema:
            $ref: "../schemas/DefaultUpdateResponse.yaml"
    "400":
      description: "The updated tag information yields an invalid tag"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "404":
      description: "The specified tag was not found"
delete:
  tags:
    - "Tag"
  operationId: "deleteTagRegistration"
  description: "Deletes an optional tag that was added to a time registration"
  parameters:
    - in: query
      name: "tagId"
      schema:
        type: "integer"
        format: "int64"
      required: true
      description: "The ID of the tag to delete"
  responses:
    "200":
      description: "Tag was successfully deleted"
      content:
        application/json:
          schema:
            $ref: "../schemas/DefaultDeleteResponse.yaml"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "404":
      description: "The requested tag was not found and could not be deleted"