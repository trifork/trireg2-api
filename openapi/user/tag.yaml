get:
  tags:
    - "Tag"
  operationId: "getTimeRegistrationTags"
  description: "Gets the tags associated with the given time registration"
  parameters:
    - in: query
      name: "timeRegistrationId"
      schema:
        type: "integer"
        format: "int64"
      required: true
      description: "The ID of the time registration to get tags for"
  responses:
    "200":
      description: "List of tags for the requested time registration"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../schemas/admin/TagTimeRegistrationResponse.yaml"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "404":
      description: "Unable to find a time registration with the specified timeRegistrationId"
    "502":
      $ref: "../responses/BadGateway.yaml"
post:
  tags:
    - "Tag"
  operationId: "tagTimeRegistration"
  description: "Tags a time registration with a specified tag and optional tag value"
  requestBody:
    description: "A JSON object containing tag information"
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/admin/TagTimeRegistrationRequest.yaml"
  responses:
    "200":
      description: "Tag was successfully added to the time registration"
      content:
        text/plain:
          schema:
            type: "string"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "400":
      description: "Tag was not added to the registration due to an error with the request"
    "404":
      description: "No time registration was found to tag"
    "502":
      $ref: "../responses/BadGateway.yaml"
put:
  tags:
    - "Tag"
  operationId: "updateTagRegistration"
  description: "Updates a tag that was added to a time registration"
  requestBody:
    description: "A JSON object containing the updated tag information"
    required: true
    content:
      application/json:
        schema:
          type: "object"
          required: ["tagId", "value"]
          properties:
            tagId:
              type: "integer"
              format: "int64"
            value:
              type: "string"
  responses:
    "200":
      description: "Tag was successfully updated"
      content:
        text/plain:
          schema:
            type: "string"
    "400":
      description: "The updated tag information yields an invalid tag"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "404":
      description: "The specified tag was not found"
delete:
  tags:
    - "Tag"
  operationId: "deleteTagRegistration"
  description: "Deletes a tag that was added to a time registration"
  parameters:
    - in: query
      name: "tagId"
      schema:
        type: "integer"
        format: "int64"
      required: true
      description: "The ID of the tag to delete"
  responses:
    "200":
      description: "Tag was successfully deleted"
      content:
        text/plain:
          schema:
            type: "string"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "404":
      description: "The requested tag was not found and could not be deleted"