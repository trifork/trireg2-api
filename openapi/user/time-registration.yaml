get:
  tags:
  - "TimeRegistration"
  operationId: "getTimeRegistrationsForUser"
  description: "Returns time registrations that belongs to a user"
  responses:
    "200":
      description: "List of time registrations for the user"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../schemas/user/TimeRegistrationResponse.yaml"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
post:
  tags:
  - "TimeRegistration"
  operationId: "addTimeRegistrationForUser"
  description: "Adds a time registration for a user"
  requestBody:
    description: "A JSON object containing time registration information"
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/user/TimeRegistrationRequest.yaml"
  responses:
    "201":
      description: "Time registration added successfully"
      content:
        application/json:
          schema:
            $ref: "../schemas/DefaultCreateResponse.yaml"
          examples:
            Example#1:
              value: {
                "id": 12345,
                "status": "Time registration added successfully"
              }
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
put:
  tags:
    - "TimeRegistration"
  operationId: "updateTimeRegistrationForUser"
  description: "Updates the specified time registration"
  parameters:
    - name: "timeRegistrationId"
      in: "query"
      description: "The id of the time registration to update"
      required: true
      schema:
        type: "integer"
        format: "int64"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/user/TimeRegistrationUpdateRequest.yaml"
  responses:
    "200":
      description: "Updated"
      content:
        application/json:
          schema:
            $ref: "../schemas/DefaultCreateResponse.yaml"
          examples:
            Success:
              value: {
                "id": 12345,
                "status": "Time registration updated successfully"
              }
    "400":
      description: "Bad update request"
      content:
        text/plain:
          schema:
            type: "string"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "404":
      description: "Time registration not found"
      content:
        text/plain:
          schema:
            type: "string"
delete:
  tags:
    - "TimeRegistration"
  operationId: "deleteTimeRegistration"
  description: "Deletes the specified time registration"
  parameters:
    - name: "timeRegistrationId"
      in: "query"
      description: "The id of the time registration to delete"
      required: true
      schema:
        type: "integer"
        format: "int64"
  responses:
    "200":
      description: "deleted"
      content:
        application/json:
          schema:
            $ref: "../schemas/DefaultDeleteResponse.yaml"
          examples:
            success-deleted:
              value: {
                "id": 12345,
                "status": "The time registration was deleted successfully (Status = deleted)"
              }
            success-rejected:
              value: {
                "id": 54321,
                "status": "The imported time registration was rejected successfully (Status = rejected)"
              }
    "400":
      description: "Bad delete request"
      content:
        text/plain:
          schema:
            type: "string"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "404":
      description: "Time registration not found"
      content:
        text/plain:
          schema:
            type: "string"