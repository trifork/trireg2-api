get:
  tags:
    - "TagConfiguration"
  operationId: "getTagConfigurations"
  description: "Gets tag configurations based on the provided query parameters"
  parameters:
    - name: "tagConfigurationId"
      in: "query"
      description: "The id of the tag configuration to get. If unspecified, all tag configurations are returned"
      required: false
      schema:
        type: "integer"
        format: "int64"
  responses:
    "200":
      description: "List of tag configurations for the provided query parameters"
      content:
        application/json:
          schema:
            type: "array"
            items:
              $ref: "../schemas/admin/TagConfigurationResponse.yaml"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "404":
      description: "Unable to find tag configurations for the query parameters (e.g. no tag configuration with specified id exists)"
post:
  tags:
    - "TagConfiguration"
  operationId: "createTagConfiguration"
  description: "Creates a new tag configuration"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/admin/TagConfigurationCreateRequest.yaml"
  responses:
    "200":
      description: "The tag configuration was successfully created"
      content:
        application/json:
          schema:
            $ref: "../schemas/DefaultCreateResponse.yaml"
    "400":
      description: "Request contains invalid data. The tag configuration was not created"
      content:
        text/plain:
          schema:
            type: "string"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "403":
      $ref: "../responses/ForbiddenError.yaml"
put:
  tags:
    - "TagConfiguration"
  operationId: "updateTagConfiguration"
  description: "Updates an existing tag configuration"
  parameters:
    - name: "tagConfigurationId"
      in: "query"
      description: "The id of the tag configuration to update"
      required: true
      schema:
        type: "integer"
        format: "int64"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/admin/TagConfigurationUpdateRequest.yaml"
  responses:
    "200":
      description: "The tag configuration was successfully updated"
      content:
        application/json:
          schema:
            $ref: "../schemas/DefaultUpdateResponse.yaml"
    "400":
      description: "Request contains invalid data. The tag configuration was not updated"
      content:
        text/plain:
          schema:
            type: "string"
    "401":
      $ref: "../responses/UnauthorizedError.yaml"
    "403":
      $ref: "../responses/ForbiddenError.yaml"
    "404":
      description: "The specified tag configuration was not found"
      content:
        text/plain:
          schema:
            type: "string"